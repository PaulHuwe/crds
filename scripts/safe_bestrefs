#! /bin/sh
#
# usage:  safe_bestrefs  --new-context hst-operational --files <dataset FITS...>  --update-bestrefs
#
#   options:  
#          --files <FITS files to update...>
#          --update-bestrefs   (fill in FITS headers,  otherwise dry-run.)
#
#   requires:  
#        CRDS_PATH        (cache directory)
#        *not* CRDS_SERVER_URL  (server synced from, clears this to be disconnected)
#        CRDS_LOCKS       (locks directory)
#
# This script is intended to be run in parallel with multiple pipeline bestrefs
# and a concurrent cron "safe_sync".  The config.lock is intended to provide
# exclusion from the "unsafe_sync" which updates the default operational
# context and CRDS cache configuration area.

# Make CRDS cache config area readonly before bestrefs to ensure that
# bestrefs does not update the config area itself...  and no outside 
# programs do either.   unsafe_sync,  which does update the config area
# and chmod's it read-write,  is blocked by config.lock.

export CRDS_SERVER_URL="https://crds-serverless-mode.stsci.edu"

( flock --shared 200
  chmod 444 ${CRDS_PATH}/config/{hst,jwst}/* >& /dev/null 
  python -m crds.bestrefs $* 
) 200> ${CRDS_LOCKS}/crds.config.lock 

