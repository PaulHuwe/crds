#! /bin/sh
#
# usage:  safe_bestrefs  --new-context hst-operational --files <dataset FITS...>  --update-bestrefs
#
#   options:  
#        --files <FITS files to update...>
#        --update-bestrefs   (fill in FITS headers,  otherwise dry-run.)
#
#   requires:  
#        CRDS_PATH        (cache directory)
#        *not* CRDS_SERVER_URL  (server synced from, safe_bestrefs clears this to be disconnected)
#        CRDS_LOCKS       (locks directory)
#
# This script is intended to be run in parallel with multiple pipeline
# bestrefs and a concurrent cron "safe_sync".
#
#  To control when information is received from the server,  and to
#  prevent pipeline stall when the CRDS server is unavailable,
#  safe_bestrefs is configured with a bad server IP address.

# break server connection:
export CRDS_SERVER_URL="https://crds-serverless-mode.stsci.edu"

( flock --shared 200 --wait 180
  chmod 444 ${CRDS_PATH}/config/{hst,jwst}/* >& /dev/null 
  python -m crds.bestrefs $* 
) 200> ${CRDS_LOCKS}/crds.config.lock 

